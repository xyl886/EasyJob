#!usr/bin/env python
# -*- coding:utf-8 -*-
"""
@author: xyl
@file:  ${FILE_NAME}
@time: ${YEAR}/${MONTH}/${DAY}
"""
# ${FILE_NAME}
import os

from Core.JobBase import JobBase



class ${NAME}(JobBase):
    job_id = ${JobId}
    folder = os.path.dirname(os.path.abspath(__file__))
    date = '${YEAR}-${MONTH}-${DAY}'

    def __init__(self, *args, **kwargs):
        super(self.__class__, self).__init__(*args, **kwargs)
        self.json_headers = {
            'Accept': '*/*',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,ja;q=0.5',
            'Connection': 'keep-alive',
            'Content-Type': 'application/json',
            'Sec-Fetch-Dest': 'empty',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Site': 'same-origin',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0',
            'sec-ch-ua': '"Chromium";v="122", "Not(A:Brand";v="24", "Microsoft Edge";v="122"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
        }
        self.text_headers = {
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,ja;q=0.5',
            'Connection': 'keep-alive',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'same-origin',
            'Sec-Fetch-User': '?1',
            'Upgrade-Insecure-Requests': '1',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0',
            'sec-ch-ua': '"Chromium";v="122", "Not(A:Brand";v="24", "Microsoft Edge";v="122"',
            'sec-ch-ua-mobile': '?0',
        }

    def on_run(self):
        if self.job_id == ${JobId}:
            self.collect()

    def collect(self):
        return

    def curl(self, url, dump_file_name, json_data=None):
        # text/html
        # try:
        #     return self.send_request(url,
        #                                  method='get',
        #                                  headers=self.text_headers,
        #                                  dump_file_name=dump_file_name,
        #                                  res_type='text',
        #                                  validate_str_list=[''])
        # except Exception as e:
        #     self.logger.error(e)
        # application/json
        try:
            return self.send_request(url,
                                     method='get',
                                     headers=self.json_headers,
                                     dump_file_name=dump_file_name,
                                     json_data=json_data,
                                     res_type='json',
                                     validate_str_list=[''])
        except Exception as e:
            self.logger.error(e)
